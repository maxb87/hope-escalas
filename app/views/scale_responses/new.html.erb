<h2><%= @scale_response.psychometric_scale.name %></h2>

<p>Responda a todos os itens abaixo. Selecione uma opção de 1 a 4 para cada pergunta.</p>

<% if current_user.email == "admin@admin.com" %>
  <div class="mb-3">
    <button type="button" class="btn btn-warning btn-sm" onclick="fillRandomAnswers()">
      <i class="bi bi-shuffle"></i> Preenchimento Aleatório (Teste)
    </button>
  </div>
<% end %>

<%= form_with model: @scale_response, url: scale_responses_path, method: :post, data: { turbo: false } do |f| %>
  <% if @scale_response.errors.any? %>
    <div class="alert alert-danger" data-turbo-cache="false">
      <h4 class="mb-2"><%= t('errors.messages.not_saved', count: @scale_response.errors.count, resource: @scale_response.class.model_name.human.downcase) %></h4>
      <ul class="mb-0">
        <% @scale_response.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <%= hidden_field_tag :scale_request_id, @scale_request.id %>
  
  <!-- Campos específicos para heterorrelato -->
  <% if @scale_response.hetero_report? %>
    <div class="card mb-4">
      <div class="card-header">
        <h5 class="mb-0">Informações do Relator</h5>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <%= f.label :relator_name, "Nome do Relator", class: "form-label" %>
              <%= f.text_field :relator_name, class: "form-control", placeholder: "Digite o nome completo do relator" %>
            </div>
          </div>
          <div class="col-md-6">
            <div class="mb-3">
              <%= f.label :relator_relationship, "Relação com o Paciente", class: "form-label" %>
              <%= f.text_field :relator_relationship, class: "form-control", placeholder: "Ex: Pai, Mãe, Cônjuge, Amigo, etc." %>
            </div>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="list-group">
    <% @scale_items.each do |item| %>
      <div class="list-group-item mb-3">
        <p><strong><%= item.item_number %>. <%= item.question_text %></strong></p>
        <div class="d-flex gap-3">
          <% item.options.sort_by { |k,_| k.to_i }.each do |score, label| %>
            <label class="form-check-label">
              <%= radio_button_tag "scale_response[answers][item_#{item.item_number}]", score, false, class: "form-check-input" %>
              <span><%= score %> — <%= label %></span>
            </label>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>

  <div class="mt-4">
    <%= f.submit t('scale_responses.new.submit'), class: "btn btn-primary" %>
  </div>
<% end %>

<script>
function fillRandomAnswers() {
  // Preencher campos de relator se for heterorrelato
  const relatorNameField = document.querySelector("input[name='scale_response[relator_name]']");
  const relatorRelationshipField = document.querySelector("input[name='scale_response[relator_relationship]']");
  
  if (relatorNameField) {
    const names = ["Maria Silva", "João Santos", "Ana Costa", "Pedro Oliveira", "Lucia Ferreira"];
    relatorNameField.value = names[Math.floor(Math.random() * names.length)];
  }
  
  if (relatorRelationshipField) {
    const relationships = ["Mãe", "Pai", "Cônjuge", "Irmão", "Amigo", "Cuidador"];
    relatorRelationshipField.value = relationships[Math.floor(Math.random() * relationships.length)];
  }
  
  // Preencher todas as respostas aleatoriamente
  const radioButtons = document.querySelectorAll("input[type='radio'][name*='scale_response[answers]']");
  
  // Agrupar por item
  const items = {};
  radioButtons.forEach(radio => {
    const name = radio.name;
    if (!items[name]) items[name] = [];
    items[name].push(radio);
  });
  
  // Selecionar uma opção aleatória para cada item
  Object.values(items).forEach(itemRadios => {
    const randomIndex = Math.floor(Math.random() * itemRadios.length);
    itemRadios[randomIndex].checked = true;
  });
  
  alert("Formulário preenchido aleatoriamente!");
}
</script>
