<div class="card mb-4">
  <div class="card-header">
    <h5 class="mb-0">
      <i class="bi bi-info-circle me-2"></i>
      Instruções para Preenchimento - PSA
    </h5>
  </div>
  <div class="card-body">
    <div class="alert alert-warning mb-3">
      <h3 class="mb-2"><strong>Em cada questão, selecione a opção que melhor descreve seu comportamento nos últimos seis meses.</strong></h3>
      <h3 class="mb-0"><strong>Responda todas as 60 questões em um único acesso. Selecione uma opção de 1 a 5 para cada pergunta.</strong></h3>
    </div>
  </div>
</div>

<% if scale_response.errors.any? %>
  <div class="alert alert-danger" data-turbo-cache="false">
    <h4 class="mb-2"><%= t('errors.messages.not_saved', count: scale_response.errors.count, resource: scale_response.class.model_name.human.downcase) %></h4>
    <ul class="mb-0">
      <% scale_response.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<!-- Formulário com subescalas (para PSA) -->
<% if scale_response.items_by_subscale.present? %>
  <% scale_response.items_by_subscale.each do |subscale, items| %>
    <div class="card mb-4">
      <div class="card-header">
        <h5 class="mb-0">Subescala <%= subscale %> - <%= get_subscale_title(subscale) %></h5>
      </div>
      <div class="card-body">
        <% if items.present? %>
          <div class="list-group">
            <% items.each do |item| %>
              <div class="list-group-item mb-3">
                <p><strong><%= item.item_number %>. <%= item.question_text %></strong></p>
                <div>
                  <% if item.options.present? %>
                    <% item.options.sort_by { |k,_| k.to_i }.each do |score, label| %>
                      <div class="form-check">
                        <%= radio_button_tag "scale_response[answers][item_#{item.item_number}]", score, false, class: "form-check-input" %>
                        <label class="form-check-label">
                          <%= score %> — <%= label %>
                        </label>
                      </div>
                    <% end %>
                  <% else %>
                    <p class="text-muted">Opções não disponíveis para este item.</p>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        <% else %>
          <p class="text-muted">Nenhum item disponível para esta subescala.</p>
        <% end %>
        
        <!-- Campo de comentários para a subescala -->
        <div class="mt-4">
          <div class="mb-3">
            <label for="subscale_comment_<%= subscale %>" class="form-label">
              <strong>Comentários sobre a Subescala <%= subscale %> - <%= get_subscale_title(subscale) %></strong>
              <small class="text-muted">(Opcional - Adicione observações relevantes sobre esta subescala)</small>
            </label>
            <%= text_area_tag "scale_response[answers][subscale_comments][#{subscale}]", 
                scale_response.get_subscale_comment(subscale), 
                class: "form-control", 
                id: "subscale_comment_#{subscale}",
                rows: 3,
                placeholder: "Digite aqui suas observações sobre esta subescala..." %>
          </div>
        </div>
      </div>
    </div>
  <% end %>
<% else %>
  <div class="alert alert-warning">
    <p>Nenhuma subescala disponível para esta escala.</p>
  </div>
<% end %>

<script>
function fillRandomAnswers() {
  // Preencher todas as respostas aleatoriamente
  const radioButtons = document.querySelectorAll("input[type='radio'][name*='scale_response[answers]']");
  
  // Agrupar por item
  const items = {};
  radioButtons.forEach(radio => {
    const name = radio.name;
    if (!items[name]) items[name] = [];
    items[name].push(radio);
  });
  
  // Selecionar uma opção aleatória para cada item
  Object.values(items).forEach(itemRadios => {
    const randomIndex = Math.floor(Math.random() * itemRadios.length);
    itemRadios[randomIndex].checked = true;
  });
  
  // Preencher comentários aleatórios
  const commentFields = document.querySelectorAll("textarea[name*='scale_response[answers][subscale_comments]']");
  const sampleComments = [
    "Observações importantes sobre esta subescala.",
    "Comportamento típico observado nesta área.",
    "Variações significativas no período avaliado.",
    "Sem observações especiais nesta subescala."
  ];
  
  commentFields.forEach(field => {
    const randomComment = sampleComments[Math.floor(Math.random() * sampleComments.length)];
    field.value = randomComment;
  });
  
  alert("Formulário preenchido aleatoriamente!");
}
</script>

<% content_for :head do %>
  <script>
    function get_subscale_title(subscale) {
      const titles = {
        'A': 'Processamento Tátil/Olfativo',
        'B': 'Processamento Vestibular/Proprioceptivo',
        'C': 'Processamento Visual',
        'D': 'Processamento Tátil',
        'E': 'Nível de Atividade',
        'F': 'Processamento Auditivo'
      };
      return titles[subscale] || subscale;
    }
  </script>
<% end %>