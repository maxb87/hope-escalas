<% 
  # Determinar se é autorelato ou heterorelato
  is_self_report = scale_response.psychometric_scale.code == "SRS2SR"
  is_hetero_report = scale_response.psychometric_scale.code == "SRS2HR"
  
  # Mapeamento dos domínios SRS-2
  srs2_domains = {
    'A' => { name: 'Percepção Social', items: (1..11).to_a },
    'B' => { name: 'Cognição Social', items: (12..22).to_a },
    'C' => { name: 'Comunicação Social', items: (23..33).to_a },
    'D' => { name: 'Motivação Social', items: (34..44).to_a },
    'E' => { name: 'Padrões Restritos ou Repetitivos', items: (45..55).to_a },
    'F' => { name: 'Interação Social Global', items: (56..65).to_a }
  }
%>

<div class="srs2-form">




  <!-- Formulário contínuo -->
  <div class="srs2-questions">
    <% scale_items.sort_by(&:item_number).each do |item| %>
      <div class="card mb-3">
        <div class="card-body">
          <h6 class="card-title">
            <strong><%= item.item_number %>) </strong>
            <%= item.question_text %>
          </h6>
          
          <div class="mb-3">
            <% item.options.sort_by { |k,_| k.to_i }.each do |score, label| %>
              <div class="form-check mb-2">
                <%= radio_button_tag "scale_response[answers][item_#{item.item_number}]", score, false, 
                    class: "form-check-input", 
                    id: "item_#{item.item_number}_#{score}" %>
                <label class="form-check-label" for="item_<%= item.item_number %>_<%= score %>">
                  <strong><%= score %></strong> — <%= label %>
                </label>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>
  </div>

  <!-- Progresso do preenchimento - Card flutuante -->
  <div class="progress-floating-card" id="progress-card">
    <div class="card shadow-lg">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h6 class="mb-1">Progresso do Preenchimento</h6>
            <small class="text-muted">Responda todas as questões para completar a escala</small>
          </div>
          <div class="text-end">
            <span id="progress-text">0/65</span>
            <div class="progress mt-1" style="width: 200px;">
              <div class="progress-bar" role="progressbar" style="width: 0%" id="progress-bar"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.progress-floating-card {
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1000;
  max-width: 600px;
  width: 90%;
  transition: all 0.3s ease;
}

.progress-floating-card .card {
  border: none;
  border-radius: 15px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
}

.progress-floating-card .card-body {
  padding: 1rem 1.5rem;
}

/* Responsividade */
@media (max-width: 768px) {
  .progress-floating-card {
    width: 95%;
    bottom: 10px;
  }
  
  .progress-floating-card .card-body {
    padding: 0.75rem 1rem;
  }
  
  .progress-floating-card .progress {
    width: 150px !important;
  }
}
</style>

<script>
// Script específico para SRS-2
document.addEventListener('DOMContentLoaded', function() {
  const radioButtons = document.querySelectorAll('input[type="radio"][name*="scale_response[answers]"]');
  const progressBar = document.getElementById('progress-bar');
  const progressText = document.getElementById('progress-text');
  
  function updateProgress() {
    const answeredItems = new Set();
    radioButtons.forEach(radio => {
      if (radio.checked) {
        const itemNumber = radio.name.match(/item_(\d+)/)[1];
        answeredItems.add(itemNumber);
      }
    });
    
    const totalItems = 65; // SRS-2 tem 65 itens
    const answeredCount = answeredItems.size;
    const percentage = (answeredCount / totalItems) * 100;
    
    progressBar.style.width = percentage + '%';
    progressText.textContent = `${answeredCount}/${totalItems}`;
    
    // Mudar cor da barra baseado no progresso
    if (percentage < 25) {
      progressBar.className = 'progress-bar bg-danger';
    } else if (percentage < 50) {
      progressBar.className = 'progress-bar bg-warning';
    } else if (percentage < 75) {
      progressBar.className = 'progress-bar bg-info';
    } else {
      progressBar.className = 'progress-bar bg-success';
    }
  }
  
  // Atualizar progresso quando uma resposta for selecionada
  radioButtons.forEach(radio => {
    radio.addEventListener('change', updateProgress);
  });
  
  // Atualizar progresso inicial
  updateProgress();
});
</script>
